package canvas2d.drawingTools{	import flash.geom.Point;	import flash.display.Stage;	import flash.events.Event;	import flash.events.MouseEvent;		import canvas2d.Canvas2D;	import core.Furniture;	import canvas2d.primitives.FurnitureDrawingObject;		public class FurnitureDrawingTool extends DrawingToolBase	{		protected var _drawingObject:FurnitureDrawingObject;				protected var _item:Furniture;				/**		 * Exposes <code>Furniture</code> item object.		 */		public function get item():Furniture { return _item; }		public function set item(value:Furniture):void { _item = value; }				/**		 * Constructor. Creates new instanse of <code>FurnitureDrawingTool</code> object.		 *		 * @param	canvas	Canvas on which new furniture items will be placed.		 */		public function FurnitureDrawingTool(canvas:Canvas2D) {			super(canvas);		}				override public function onStartDrawing(e:Event):void {			_isDrawing = true;			var globalPoint = _canvas.getNearestGridPointGlobal(_globalMousePosition);			_drawingObject = new FurnitureDrawingObject(_item);			_drawingObject.position = globalPoint;			_stage.addChild(_drawingObject);			_stage.addEventListener(MouseEvent.MOUSE_UP, stage_onMouseUp);			_drawingObject.isDrawing = true;			_drawingObject.startDrag();		}				protected function stage_onMouseUp(e:MouseEvent):void {			finishDrawing();			_canvas.addDrawingObject(_drawingObject);			_drawingObject = null;		}				protected function finishDrawing():void {			_drawingObject.stopDrag();			_drawingObject.isActive = false;			_drawingObject.isDrawing = false;			_drawingObject.isDropped = true;			_stage.removeEventListener(MouseEvent.MOUSE_UP, stage_onMouseUp);			_isDrawing = false;		}				override public function stopDrawing():void {			finishDrawing();			if(_drawingObject != null) {				_canvas.removeDrawingObject(_drawingObject);			}			_drawingObject = null;		}	}}